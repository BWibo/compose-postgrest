version: '3'

services:

  ###########
  # kong-db #
  ###########
  kong-db:
    container_name: kong-db
    image: postgres:9.6.2-alpine
    environment:
      - POSTGRES_USER=kong
      - POSTGRES_DB=kong
    networks:
      - kong-backend
    restart: always

  ########
  # kong #
  ########
  kong:
    container_name: kong
    image: kong:0.10.2
    ports:
      - "8000:8000"
      - "8443:8443"
      - "8001:8001"
      - "7946:7946"
      - "7046:7946/udp"
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-db
    networks:
      - kong-backend
      - postgrest-backend
    restart: always

  #########
  # konga #
  #########
  konga:
    container_name: konga
    image: pantsel/konga:0.6.7
    ports:
      - "1337:1337"
    networks:
      - kong-backend
    restart: always

  ################
  # postgrest-db #
  ################
  postgrest-db:
    container_name: postgrest-db
    image: postgres:9.6.2-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./initdb:/docker-entrypoint-initdb.d"
    networks:
      - postgrest-backend
    restart: always

  #############
  # postgrest #
  #############
  postgrest:
    container_name: postgrest
    build: ./postgrest
    image: postgrest:v0.4.1.0
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      - "./postgrest.conf:/etc/postgrest.conf.template"
    networks:
      - postgrest-backend
    restart: always

  ##############
  # swagger-ui #
  ##############
  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui:v3.0.8
    ports:
      - "8080:8080"
    environment:
      - API_URL=http://localhost:3000/
    restart: always

networks:
  kong-backend:
    driver: bridge

  postgrest-backend:
    driver: bridge