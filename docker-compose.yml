version: '3'

services:
  db:
    container_name: db
    image: postgres:9.6.2-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./initdb:/docker-entrypoint-initdb.d"
    restart: always

  postgraphql:
    container_name: postgraphql
    image: erasche/postgraphql
    ports:
      - "5000:5000"
    environment:
      #- DB_DEFAULT_ROLE=postgres
      - DB_GRAPHQL_PATH=/graphql
      - DB_GRAPHIQL_PATH=/graphiql
      #- PG_SECRET=deadbeefcafe
      - DB_SCHEMA=${DB_SCHEMA}
      - PGUSER=${POSTGRES_USER}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGHOST=db
      - PGPORT=5432
      - PGDATABASE=${POSTGRES_DB}

  postgrest:
    container_name: postgrest
    build: ./postgrest
    image: postgrest:v0.4.1.0
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      - "./postgrest.conf:/etc/postgrest.conf.template"
    restart: always

  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui:v3.0.9
    ports:
      - "8080:8080"
    environment:
      - API_URL=http://localhost:3000/
    restart: always